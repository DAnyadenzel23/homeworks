'''1.Определите класс Person().
В функции init() определите несколько атрибутов человека. Хорошими атрибутами, которые следует учитывать, являются имя, возраст, место рождения
и все, что вам нужно знать о людях в вашей жизни. Не менее 3 атрибутов.
Напишите один метод. Это может быть просто introduce_yourself(). Этот метод выводит такое утверждение, как «Здравствуйте, меня зовут Эрик».
Вы также можете создать такой метод, как age_person(). Простая версия этого метода просто добавит 1 к возрасту человека.
Создайте человека, установите соответствующие значения атрибутов и выведите информацию о человеке.
Вызовите свой метод для человека, которого вы создали. Убедитесь, что ваш метод выполняется правильно; если метод ничего не выводит напрямую,
 напечатайте что-нибудь до и после вызова метода, чтобы убедиться, что он сделал то, что предполагалось.
2.Студенческий класс
Начните с вашей программы из класса Person.
Создайте новый класс под названием Student, который наследуется от Person.
Определите некоторые качества, которые есть у учащегося, которых нет у других людей. У учащегося есть школа, с которой он связан,
год выпуска, средний балл и другие особые атрибуты.
Создайте объект Student и докажите, что вы правильно использовали наследование.
Установите некоторые значения атрибутов для учащегося, которые закодированы только в классе Person.
Установите некоторые значения атрибутов для учащегося, которые закодированы только в классе учащегося.
Выведите значения для всех этих атрибутов.'''

class Person():

    def __init__(self, name, age, place_of_birth,totem_animal):
        self.name = name
        self.age = age
        self.place_of_birth = place_of_birth
        self.totem_animal = totem_animal

    def introduce(self, p_name, p_age, p_place_of_birth, p_totem_animal):
        self.name = p_name
        self.age = p_age
        self.place_of_birth = p_place_of_birth
        self.totem_animal = p_totem_animal
        print('Hello, my name is %s. I am %d years old. My place of birth is %s.' %(p_name, p_age, p_place_of_birth))
        if p_totem_animal is None:
            print('I don`t have a pet')
        else:
            print('My pet is ', p_totem_animal)

person1 = Person('Daniil', 30, 'Olenegorsk', totem_animal=None)
person1.introduce()

